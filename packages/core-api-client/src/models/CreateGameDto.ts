/* tslint:disable */
/* eslint-disable */
/**
 * Composite API
 * Composite the game API
 *
 * The version of the OpenAPI document: 1.0.0-next.21
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface CreateGameDto
 */
export interface CreateGameDto {
    /**
     * 
     * @type {string}
     * @memberof CreateGameDto
     */
    region: string;
    /**
     * 
     * @type {string}
     * @memberof CreateGameDto
     */
    mode: CreateGameDtoModeEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateGameDto
     */
    levelId: number;
    /**
     * 
     * @type {string}
     * @memberof CreateGameDto
     */
    deviceType: CreateGameDtoDeviceTypeEnum;
    /**
     * 
     * @type {number}
     * @memberof CreateGameDto
     */
    userId?: number;
}


/**
 * @export
 */
export const CreateGameDtoModeEnum = {
    SinglePlayer: 'SINGLE_PLAYER',
    MultiPlayer: 'MULTI_PLAYER'
} as const;
export type CreateGameDtoModeEnum = typeof CreateGameDtoModeEnum[keyof typeof CreateGameDtoModeEnum];

/**
 * @export
 */
export const CreateGameDtoDeviceTypeEnum = {
    Desktop: 'DESKTOP',
    Mobile: 'MOBILE'
} as const;
export type CreateGameDtoDeviceTypeEnum = typeof CreateGameDtoDeviceTypeEnum[keyof typeof CreateGameDtoDeviceTypeEnum];


/**
 * Check if a given object implements the CreateGameDto interface.
 */
export function instanceOfCreateGameDto(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "region" in value;
    isInstance = isInstance && "mode" in value;
    isInstance = isInstance && "levelId" in value;
    isInstance = isInstance && "deviceType" in value;

    return isInstance;
}

export function CreateGameDtoFromJSON(json: any): CreateGameDto {
    return CreateGameDtoFromJSONTyped(json, false);
}

export function CreateGameDtoFromJSONTyped(json: any, ignoreDiscriminator: boolean): CreateGameDto {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'region': json['region'],
        'mode': json['mode'],
        'levelId': json['levelId'],
        'deviceType': json['deviceType'],
        'userId': !exists(json, 'userId') ? undefined : json['userId'],
    };
}

export function CreateGameDtoToJSON(value?: CreateGameDto | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'region': value.region,
        'mode': value.mode,
        'levelId': value.levelId,
        'deviceType': value.deviceType,
        'userId': value.userId,
    };
}

