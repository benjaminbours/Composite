/* tslint:disable */
/* eslint-disable */
/**
 * Composite API
 * Composite the game API
 *
 * The version of the OpenAPI document: 0.4.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface LevelElement
 */
export interface LevelElement {
    /**
     * 
     * @type {string}
     * @memberof LevelElement
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof LevelElement
     */
    type: LevelElementTypeEnum;
    /**
     * 
     * @type {object}
     * @memberof LevelElement
     */
    properties: object;
    /**
     * 
     * @type {object}
     * @memberof LevelElement
     */
    mesh: object;
}


/**
 * @export
 */
export const LevelElementTypeEnum = {
    Wall: 'wall',
    WallDoor: 'wall_door',
    DoorOpener: 'door_opener',
    Arch: 'arch',
    Bounce: 'bounce',
    EndLevel: 'end_level',
    FatColumn: 'fat_column'
} as const;
export type LevelElementTypeEnum = typeof LevelElementTypeEnum[keyof typeof LevelElementTypeEnum];


/**
 * Check if a given object implements the LevelElement interface.
 */
export function instanceOfLevelElement(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "type" in value;
    isInstance = isInstance && "properties" in value;
    isInstance = isInstance && "mesh" in value;

    return isInstance;
}

export function LevelElementFromJSON(json: any): LevelElement {
    return LevelElementFromJSONTyped(json, false);
}

export function LevelElementFromJSONTyped(json: any, ignoreDiscriminator: boolean): LevelElement {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'type': json['type'],
        'properties': json['properties'],
        'mesh': json['mesh'],
    };
}

export function LevelElementToJSON(value?: LevelElement | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'type': value.type,
        'properties': value.properties,
        'mesh': value.mesh,
    };
}

