/* tslint:disable */
/* eslint-disable */
/**
 * Composite API
 * Composite the game API
 *
 * The version of the OpenAPI document: 1.0.0-next.10
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface PlayerStateResponse
 */
export interface PlayerStateResponse {
    /**
     * 
     * @type {number}
     * @memberof PlayerStateResponse
     */
    status: PlayerStateResponseStatusEnum;
    /**
     * 
     * @type {number}
     * @memberof PlayerStateResponse
     */
    side?: PlayerStateResponseSideEnum;
    /**
     * 
     * @type {number}
     * @memberof PlayerStateResponse
     */
    selectedLevel?: number;
}


/**
 * @export
 */
export const PlayerStateResponseStatusEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1,
    NUMBER_2: 2,
    NUMBER_3: 3
} as const;
export type PlayerStateResponseStatusEnum = typeof PlayerStateResponseStatusEnum[keyof typeof PlayerStateResponseStatusEnum];

/**
 * @export
 */
export const PlayerStateResponseSideEnum = {
    NUMBER_0: 0,
    NUMBER_1: 1
} as const;
export type PlayerStateResponseSideEnum = typeof PlayerStateResponseSideEnum[keyof typeof PlayerStateResponseSideEnum];


/**
 * Check if a given object implements the PlayerStateResponse interface.
 */
export function instanceOfPlayerStateResponse(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "status" in value;

    return isInstance;
}

export function PlayerStateResponseFromJSON(json: any): PlayerStateResponse {
    return PlayerStateResponseFromJSONTyped(json, false);
}

export function PlayerStateResponseFromJSONTyped(json: any, ignoreDiscriminator: boolean): PlayerStateResponse {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'status': json['status'],
        'side': !exists(json, 'side') ? undefined : json['side'],
        'selectedLevel': !exists(json, 'selectedLevel') ? undefined : json['selectedLevel'],
    };
}

export function PlayerStateResponseToJSON(value?: PlayerStateResponse | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'status': value.status,
        'side': value.side,
        'selectedLevel': value.selectedLevel,
    };
}

